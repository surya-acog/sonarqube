# on:
#   # Trigger analysis when pushing in master or pull requests, and when creating
#   # a pull request. 
#   push:
#     branches:
#       - main
#   pull_request:
#       types: [opened, synchronize, reopened]

# name: SonarQube Scan
# jobs:
#   sonarqube:
#     name: SonarQube Trigger
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checking out
#       uses: actions/checkout@main
#       with:
#         # Disabling shallow clone is recommended for improving relevancy of reporting
#         fetch-depth: 0
#     - name: SonarQube Scan
#       uses: kitabisa/sonarqube-action@v1.2.1
#       with:
#         host: ${{ secrets.SONARQUBE_HOST }} 
#         login: ${{ secrets.SONARQUBE_TOKEN }}
#         projectKey: "test"




# on:
#   push:
#     branches:
#       - main


# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - uses: sonarsource/sonarqube-scan-action@master
#         env:
#           SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
#       # If you wish to fail your job when the Quality Gate is red, uncomment the
#       # following lines. This would typically be used to fail a deployment.
#       # - uses: sonarsource/sonarqube-quality-gate-action@master
#       #   timeout-minutes: 5
#       #   env:
#       #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}








on: push
name: SonarQube Workflow
jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 0
    # Setup java 17 to be default (sonar-scanner requirement as of 5.x)
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '17'
    # Setup sonar-scanner
    - name: Setup SonarQube
      uses: warchant/setup-sonar-scanner@v7
    # Run sonar-scanner
    - name: SonarQube Scan
      run: sonar-scanner
           -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
           -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
           #-Dsonar.projectKey=test
           # -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
           # -Dsonar.sources=$GITHUB_WORKSPACE
